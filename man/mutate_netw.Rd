% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-mutate-netw.R
\name{mutate_netw}
\alias{mutate_netw}
\alias{mutate_netw,omic-method}
\alias{mutate_netw,omics-method}
\title{Mutate Network/Community Slots in an \code{omic} Object}
\usage{
mutate_netw(object, ...)
}
\arguments{
\item{object}{An \code{omic} object.
This function targets the \code{netw} (network graph) and \code{comm} (community/cluster)
slots for computations, and writes results as new columns into \code{taxa(object)}.}

\item{...}{One or more expressions to be evaluated. Within each expression, the
symbols \code{netw} and \code{comm} refer to the network and community slots respectively.}
}
\value{
The modified \code{omic} object, with new columns appended to \code{taxa(object)}.
}
\description{
Applies user-defined expressions to compute new columns for the \code{taxa} slot,
using the network (\code{netw}) and community (\code{comm}) slots of an \code{omic} object.
Expressions are evaluated in a data mask where the symbols
\code{netw} and \code{comm} are bound to the current object's slotsâ€”or, if the object
is grouped via \code{group_omic()}, to the corresponding slots of each subgroup-
specific subset.
}
\details{
\itemize{
\item \strong{Grouping semantics:} This function respects the grouping state set with
\code{group_omic()}. The taxa-level grouping variables are discovered through
\code{taxa_vars(object)}. If no taxa grouping variables are present, expressions
are evaluated once globally; otherwise they are evaluated \emph{per subgroup}
on a subsetted object, and results are stitched back in the original order.
\item \strong{No string rewriting:} expressions are evaluated using a \code{data} mask so the
symbols \code{netw} and \code{comm} resolve directly to the intended slots, avoiding
fragile text substitution.
\item \strong{Selected links:} if \code{select_link()} has been used earlier, only those edges
are present during the computation (via a temporary subgraph), then the original
network is restored.
\item \strong{Result length:} each expression must return either a scalar or a vector of
length equal to the number of taxa in scope (whole object or subgroup).
}
}
